<?php
function profile_ext_perm()
{
	return array(
		"profile_ext manage external_accounts",
	);
}

function profile_ext_menu()
{
	$menu = array();

	/*--- various profile section pages ---*/
		
	// overwrite the normal user profile page from user module.	
	// user module uses:   $items['user/%user_uid_optional'] = array(


  /* Stephen, code-build menu creation */
/* is the user menu item from core the parent? I think so.
  $items['user'] = array(
    'title' => 'User account',
    'page callback' => 'user_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'user.pages.inc',
  );
*/

	/* Add some minimal menu items for the Profile pages
   *  They're built off the user system, preprocessing it here:
   *  function profile_ext_preprocess_user_profile(&$vars)
   *  and winds up at user-profile.tpl.php which has a little module-stuff
   *  in it

   *  note: direct parent is   $items['user/%user_uid_optional'] = array(
   *    which views your account in the default settings [?] 
   */

	/* I think it might be better to change the file path etc
   *  and initiate the whole process here.  Perhaps pass in both
   *  arguments, rather than just modify the call to the user page
   *  This is mucking up "active" and so on ...

	 * ERROR: this seemed to test ok, and then later (I thought I was
    *  clearing cache?) create nasty "Access Denied" even for adming.
   */


/* ERASE THIS 2011 12 01 
  $menu['user/%user/activities'] = array(  
    "title"       => "Activity",
		'page arguments'=> array(1),
    //'type'=> MENU_DEFAULT_LOCAL_TASK,
		'type'=>'MENU_CALLBACK',
		// this is the default -- but without 'file path' it looks local	
    //'file' => 'user.pages.inc',
		'file path' => drupal_get_path('module', 'user'),
  );
*/
  /*$menu['user/%user/collections'] = array(
    "title"       => "Collections",
    'access callback' => 'user_view_access', puttering, think through
    'access arguments' => array(1),
		'page arguments'=> array(1),
    'type'=> MENU_LOCAL_TASK,
		'file path' => drupal_get_path('module', 'user'),
  );
  $menu['user/%user/about'] = array(
    "title"       => "About",
  	'page arguments'=> array(1),
    'type'=> MENU_LOCAL_TASK,
		'file path' => drupal_get_path('module', 'user'),
 	);
	*/






	/*--- Nelson's work below here, Stephen's recent additions above ---*/	
	
	$menu['profile/%user/change-picture'] = array(
		"title"				=> "Change Picture",
		"page callback"		=> "profile_ext_change_picture",
		"page arguments"	=> array(1),
		"access callback"	=> "profile_ext_access_edit_picture",
		"access arguments"	=> array(1),
		"file"				=> "profile_ext.pages.inc",
		"type"				=> MENU_CALLBACK,
	);

	
	return $menu;
}

function profile_ext_menu_alter(&$menu)
{
	if (module_exists("privatemsg"))
	{
		$menu['messages']['title callback'] = "t";
	}
}

function profile_ext_user($op, &$edit, &$u, $category=null)
{
	switch ($op)
	{
		case "login":
			if (empty($_GET['destination']) || $_GET['destination'] == "frontpage")
			{
				//$_GET['destination'] = $_REQUEST['destination'] = "my-dashboard"; -- stephen, no the things in the if are correct for today's wireframe, might change again so leaving code in place
				
			}
			break;
	}
}

function profile_ext_block($op="list", $delta=0, $edit=array())
{
	switch ($op)
	{
		case "list":
			return array(
				"navigation_profile_display"	=> array(
					"info"	=> t("Profile Navigation"),
					"cache"	=> BLOCK_NO_CACHE, // i'll handle caching on my own, kthx. [ -- Nelson, stephen thinks]
				)
			);
		case "view":
			switch ($delta)
			{
				case "navigation_profile_display":
					global $user;
					
					$content = $user->uid ? profile_ext_display_block($user) : "";
					
					return array(
						"subject"	=> "",
						"content"	=> $content,
					);
			}
	}
}

/* load a tpl for every pixel on the screen */
function profile_ext_theme(&$existing, $type, $theme, $path)
{
	return array(
		"profile_ext_external_accounts"	=> array(
			"arguments"	=> array(
				"partner_data"	=> array(),
				"user_accounts"	=> false,
				"admin_external_account"		=> false,
			),
			"template"	=> "templates/profile/external-accounts",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		/* seems to be part of profile, what calls it? */
		"profile_ext_view_fields"	=> array(
			"arguments"	=> array("target_user" => false, "fields_category" => array()),
			"template"	=> "templates/profile/view-fields",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_profile_info"	=> array(
			"arguments"	=> array("uid"	=> 0, "access"	=> PRIVACY_PUBLIC),
			"template"	=> "templates/profile/profile-info",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_edit_link"		=> array(
			"arguments" => array("url"	=> ""),
			"template"	=> "templates/profile/edit-link",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		/* used for the top left primary menus */
		"profile_ext_displayblock"		=> array(
			"arguments"	=> array("user" => false, "profile_picture" => false, "vars" => array()), // was sub_items, stephen changed to vars
			"template"	=> "templates/profile/display-block",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_displayblock_item"	=> array( /* awful complex, destroy -- stephen
			this may have been removed from code, test, see
			if it's called elsewhere.  */
			"arguments"	=> array("item_data" => array()),
			"template"	=> "templates/profile/display-block-item",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_header"			=> array(
			"arguments"	=> array("profile_ext_user" => false),
			"template"	=> "templates/profile/header",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		/* something to do with account editing */
		"profile_ext_header_menu"		=> array(
			"arguments"	=> array("profile_ext_user" => false),
			"template"	=> "templates/profile/header-menu",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_dashboard"			=> array(
			"arguments"	=> array("profile_tabs" => array(), "profile_actions" => array()),
			"template"	=> "templates/profile/dashboard",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_profile_progress"	=> array(
			"arguments"	=> array("completion_steps" => ""),
			"template"	=> "templates/profile/profile-progress",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		/* stephen adding template */
		"profile_ext_profile"	=> array(
			"arguments"	=> array("account"=>array(),
				"this_page" => null,
				"sec_menu" => null),
			"template"	=> "templates/profile/profile",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
	
	);
}

/* function profile_ext_display_block($user)
 *  show the user's picture, name, and desktop (buy, sell, etc)
 *		in the top left.
 *  Whole thing disappears if not signed in.
 * Nelson cached this for 5 minutes -- so if you're chit-chatting with
 *  someone else you won't see it.  I think we should take out caching
 *  of messages and offers unless need to throttle, and postpone in any
 *  case.  
 * His code will be kept and commented in stub function below this.
 * My code is a little sloppy but clear
 *   -- Stephen'
 */
function profile_ext_display_block($u)
{	
	$vars = array();

	$cache_key = "profile_display_block:{$u->uid}";
	$cache_time = 60*0; // 0 minutes
	
	if ($cache = cache_get($cache_key, "cache"))
	{
		$items = $cache->data;
	}
	else
	{
		module_load_include("inc", "profile_ext");
		$items = "";
	
		if (module_exists("privatemsg"))
		{
			$vars['msg_count'] = privatemsg_unread_count($u);
//dsm($vars);
		}
		$vars['notifications'] = profile_ext_get_dashboard_notifications($u->uid, $tabs);
		
	}

	global $user;
  $vars['friend_count'] = module_exists("network") ? count(_network_get_friends($user->uid, 1)) : 0;


	// how many buying and selling offers? Needs rethinking at design level

	// print $GLOBALS['current_view']->total_rows; or num_rows
	$view = views_get_view('user_selling_offered');	
	$view->execute_display(); // do one that doesn't have a pager?!!!
	$vars['selling'] = count($view->result);

	// print $GLOBALS['current_view']->total_rows; or num_rows
	$view = views_get_view('user_buying_offers');	
	$view->execute_display(); // do one that doesn't have a pager?!!!
	$vars['buying'] = count($view->result);


	//$pic_nelson = $u->picture ? file_create_url($u->picture) : "/themes/vibio/images/icons/default_user_large.png";
  $alt = "Your picture";
  $title = '';
  $attributes = '';

	if ( !$u->picture ) { /* deal with no pic loaded */
		$u->picture = "themes/vibio/images/icons/default_user_large.png";
	}
	//elsewhere: $pic = $u->picture ? file_create_url($u->picture) : "/themes/vibio/images/icons/default_user_large.png";
	$pic = theme('imagecache', "little_profile_pic", $u->picture, $alt, $title, $attributes);
	// fire it to this template: templates/profile/display-block
	return theme("profile_ext_displayblock", $u, $pic, $vars);
}

function profile_ext_get_progress($uid)
{
	$total = 0;
	$completed = 0;
	$completion_steps = array();
	
	foreach (module_invoke_all("profile_ext_progress", $uid) as $category => $data)
	{
		$total += $data['possible_points'];
		$completed += $data['points'];
		$steps = $data['completion_steps'] ?: array();
		
		foreach ($steps as $link)
		{
			$completion_steps[] = $link;
		}
	}
	
	$completion_steps = implode("<br />", $completion_steps);
	
	if ($total == $completed) {
		module_invoke_all("profile_ext_complete_profile", $uid);
	}
	
	drupal_add_js(array(
		"profile_ext"	=> array(
			"profile_progress"	=> (int) number_format(100*($completed/$total), 0),
		),
	), "setting");
	
	return theme("profile_ext_profile_progress", $completion_steps);
}

function profile_ext_profile_ext_progress($uid)
{
	$sql = "SELECT *
			FROM {profile_fields}
			ORDER BY `category`";
	$res = db_query($sql);
	
	$data = array(
		"possible_points"	=> 0,
		"points"			=> 0,
		"complete"			=> true,
	);
	
	while ($row = db_fetch_array($res))
	{
		$fields[$row['category']][] = $row['fid'];
		++$data['possible_points'];
	}
	
	foreach ($fields as $category => $fids)
	{
		$sql_fids = implode(",", $fids);
		$sql = "SELECT COUNT(*)
				FROM {profile_values}
				WHERE `uid`=%d
					AND `value` != ''
					AND `fid` IN ($sql_fids)";
		$category_complete = db_result(db_query($sql, $uid));
		$data['points'] += $category_complete;
		
		if ($category_complete < count($fids)) //greatest value should only be equal to
		{
			$params = array(
				"!category"	=> $category,
				"!missing"	=> count($fids) - $category_complete,
			);
			$text = t("Complete !category profile info (!missing items missing)", $params);
			
			$data['complete'] = false;
			$data['completion_steps'][] = l($text, "user/$uid/edit/$category");
		}
	}
	
	return array(t("Profile")	=> $data);
}

function profile_ext_preprocess_user_profile(&$vars)
{
	global $user;
	module_load_include("inc", "profile_ext");

	// Remove the title from the page!
	// But this preprocess is for the node.tpl, not page.tpl
	// This feels not so elegant, seems to work fine.  Code here
	//  and page.tpl
	global $skiptitle;
	$skiptitle = 1;
	
	$args = explode("/", $_GET['q']);
	$uid = $args[1];
	$target_user = user_load($uid);  // $user is looking at $target_user profile
	
	if ($user->uid == $uid)
	{
		// not being printed in current template, leave for now
		$vars['profile']['profile_progress'] = profile_ext_get_progress($uid);
	}
	
	$vars['profile']['user'] = $target_user;
	$vars['profile']['demographics'] = theme("profile_ext_view_fields", $target_user, "demographics");  // what are demographics?
	//$vars['profile']['public_info'] = profile_ext_public_info($uid);

	/* Second half of page depends on third arg, user/uid/second_section */
	// In v2 redo this, I think, passing these in from menu
	$sec_page = $args[2]; // user/uid/$sec_page like "about me"
	

	$vars['active'][$sec_page] = 'class="active" ';
	switch ( $sec_page ) {
		case "badges":	
			// titles for badges were done at a different time and style,
			//  and are here: badges/badge.module  (integrate?)
			$vars['sec_content_class'] = $sec_page;
			$vars['sec_content'] = 
				"<div id='user_badges'>" .
				theme("badge_list", $uid) .
				"</div>";
			break;
    // eventually, split to collections and inventory, this will be collection,
    // but with only one choice, call it inventory.
		// sucess: /user/1/inventory
    case "inventory":
		case "collections":
    $vars['sec_content_class'] = $sec_page;

		$access = module_exists("privacy") ? privacy_get_access_level($uid) : 1;
			//!!! This shows only what you can see, without quite
			//	letting you know that, for example, an anoymous
			//	user can't see much
			if ( $user->uid < 1 ) {
				$msg = "<h3>Sign in for a better view of " . check_plain($target_user->name) . "'s collections.</h3>";
			} elseif ( $user->uid != $uid ) {
				//We can now share the user's collections page
			      if(module_exists('addthis')){
				$addthis_variables['title'] = $user->name . "'s Vibio Collections";
				$path = isset($_GET['q']) ? $_GET['q'] : '<front>';
				$link = url($path, array('absolute' => TRUE));
				$addthis_variables['url'] = $link; 
				$share_html = theme('addthis_toolbox', $addthis_variables);
			      }
				!empty($share_html) ? $msg = "<h1 class='page-title-sub'>Collections</h1>" . $share_html : $msg = "<h1 class='page-title-sub'>Collections</h1>";
			}
			if (empty($msg)) { $msg = "<h1 class='page-title-sub'>Collections</h1>"; }

			$vars['sec_content'] =  
				$msg .
				views_embed_view("user_collections", "default", $uid, $access);


			break;
    case "about me":
    case "about":
	    // This is overkill, since "About" is always public?  
			//  Or is the Edit link shown if privacy is high enough?
			//   no, edit is right below, which should be switched to access,
			//   but not the custom access .... good enough for now
      $vars['sec_content_class'] = "about";

			$access = module_exists("privacy") ? privacy_get_access_level($uid) : 1;
			$edit_me = '';
			if ( $user->uid == $uid ) {
				$edit_me = l('Edit Information', 'user/' . $uid . '/edit/About%20Me');
			}
			$vars['sec_content'] ='<h1 class="page-title-sub">About Me</h1>' . '<span class="section_sub_title">' . $edit_me . '</span>' . 
				theme("profile_ext_profile_info", $uid, $access) .
				profile_ext_public_info($uid);

			break;
    case "activity":  // never used, default blank?
    default:
      $vars['sec_content_class'] = "activity";


      drupal_set_title($user->name); //(t($user->name));
			// can't yet tell heartbeat views apart
      //$vars['sec_content'] = views_embed_view("user_hb_incoming_activity");

			$access = module_exists("privacy") ? privacy_get_access_level($uid) : 1;
//$access = 1; // 4 MYONLY shows nothing looking at someone else; 3 shows it;
						// 2 shows it, and 1 doesn't!  
			$vars['sec_content'] = 
				'<h1 class="page-title-sub">Recent Activity</h1>' .
				views_embed_view("user_heartbeat_activity", "block_1", $uid, $access);

    break;

	}

	// Finding friends.
	// network_get seems to return my entire network, maybe two friends
	//	out.  This might be coded in network module or elsewhere, but recoding
	//  is faster than reverse engineering for the moment.
	// Since network_get shows two degrees out, it's weird.
	$network = network_get($uid);
	$me_in_their_wide_network = $network[$user->uid]['friends'];

	// this wants a second parameter of $rel_type... seems like 1 is a default
	//  elsewhere?
	//  does this mean, I think it means, people one connection out?
	$rel_type = 1; // maybe
	$friends = _network_get_friends($uid, $rel_type);
	//dsm($me_in_their_wide_network);
	if ( $uid == $user->uid ) {
		$vars['who_to_you'] = 'you';
	} elseif ( in_array($user->uid, $friends ) ) {
		$vars['who_to_you'] = 'connection';
	} elseif ( $me_in_their_wide_network ) {
		$vars['who_to_you'] = 'second';
	} else {
		$vars['who_to_you'] = 'none';
	}

}

function profile_ext_preprocess_page(&$vars)
{
	global $user;
	
	drupal_add_css("themes/vibio/css/profile.css");
	drupal_add_js(array("profile_ext" => array("time_offset" => $user->timezone ? $user->timezone : 0, "utc_date" => array("y" => gmdate("Y"), "m" => gmdate("n") - 1, "d" => gmdate("j")))), "setting");
	$vars['profile_ext_header'] = theme("profile_ext_header", $user);
}

function profile_ext_preprocess_profile_ext_profile_info(&$vars)
{
	global $user;
	$u = user_load($vars[uid]);
		
	if ($vars['access'] >= privacy_get($vars['uid'], "profile", "profile_about_me"))
	{
		module_load_include("inc", "profile_ext", "profile_ext.pages");
		
		$u = user_load($vars['uid']);
		$vars['username'] = $u->name;

		$vars['profile_about_me'] = theme("profile_ext_view_fields", $u, "about me");
		$vars['profile_external_accounts'] = profile_ext_manage_external_accounts($vars['uid']);
	}
	
	if ($vars['access'] >= privacy_get($vars['uid'], "profile", "profile_demographics"))
	{
		module_load_include("inc", "profile_ext", "profile_ext.pages");
		
		$u = user_load($vars['uid']);
		$vars['profile_demographics'] = theme("profile_ext_view_fields", $u, "demographics");
	}
	
	if ($vars['uid'] == $user->uid || user_access("administer users"))
	{
		$vars['about_edit_link'] = theme("profile_ext_edit_link", "user/{$vars['uid']}/edit/About Me");
		$vars['demographics_edit_link'] = theme("profile_ext_edit_link", "user/{$vars['uid']}/edit/Demographics");
	}
}

function profile_ext_access_dashboard()
{
	global $user;
	return $user->uid > 0;
}

function profile_ext_access_profile($user, $category)
{
	$privacy_setting = privacy_get($user->uid, "profile", "profile_{$category}");
	return user_access("access user profiles") && privacy_get_access_level($user->uid) >= $privacy_setting;
}

function profile_ext_access($perm)
{
	return user_access("administer users") || user_access($perm);
}

function _profile_ext_get_title($user, $category)
{
	return t("!user - !category", array("!user" => $user->name, "!category" => $category));
}

function profile_ext_form_user_profile_form_alter(&$form, &$state)
{
	$category = _profile_ext_format_string($form['_category']['#value']);
	
	$profile_categories = array(
		"about_me",
		//"demographics",
	);
	
	if (in_array($category, $profile_categories))
	{
		$form_category = $form['_category']['#value'];
		$form[$form_category]['privacy_settings_fieldset'] = _privacy_fieldset($form['_account']['#value']->uid, "profile", "profile_{$category}");
		$form['#submit'][] = "_privacy_form_submit";
	}
}

function profile_ext_profile_ext_public_info($uid)
{
	$u = user_load($uid);
	$join_date_format = date("Y") == date("Y", $u->created) ? "M j" : "M j, Y";
	$join_date = date($join_date_format, $u->created);
	$join_date_interval = format_interval(time() - $u->created, 1);
	
	return array(array(
		"weight"=> 10,
		"title"	=> t("Joined Vibio"),
		"data"	=> "$join_date ($join_date_interval)"
	));
}

function _profile_ext_format_string($string, $for_url=false)
{
	$replacement = $for_url ? "-" : "_";
	return str_replace(array(" ", "-", "+", "_"), $replacement, strtolower($string));
}

function profile_ext_access_edit_picture($u)
{
	global $user;
	return $u->uid == $user->uid || user_access("administer users");
}
?>
