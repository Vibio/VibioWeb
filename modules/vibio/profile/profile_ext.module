<?php
function profile_ext_perm()
{
	return array(
		"profile_ext manage external_accounts",
	);
}

function profile_ext_menu()
{
	$menu = array();
	
	$menu['my-dashboard'] = array(
		"title"				=> "My Dashboard",
		"page callback"		=> "profile_ext_dashboard",
		"access callback"	=> "profile_ext_access_dashboard",
		"file"				=> "profile_ext.pages.inc",
		"type"				=> MENU_SUGGESTED_ITEM,
	);
	
	foreach (module_invoke_all("profile_ext_menuitems") as $href => $title_callback)
	{
		$menu["my-dashboard/{$href}"] = array(
			"title"				=> "My Dashboard",
			"title callback" 	=> $title_callback,
			"title arguments"	=> array($href),
			"page callback"		=> "profile_ext_dashboard",
			"page arguments"	=> array(1),
			"access callback"	=> "profile_ext_access_dashboard",
			"file"				=> "profile_ext.pages.inc",
			"type"				=> MENU_SUGGESTED_ITEM,
		);
	}
	
	return $menu;
}

function profile_ext_menu_alter(&$menu)
{
	if (module_exists("privatemsg"))
	{
		$menu['messages']['title callback'] = "t";
	}
}

function profile_ext_user($op, &$edit, &$u, $category=null)
{
	switch ($op)
	{
		case "login":
			if (empty($_GET['destination']) || $_GET['destination'] == "frontpage")
			{
				$_GET['destination'] = $_REQUEST['destination'] = "my-dashboard";
			}
			break;
	}
}

function profile_ext_block($op="list", $delta=0, $edit=array())
{
	switch ($op)
	{
		case "list":
			return array(
				"navigation_profile_display"	=> array(
					"info"	=> t("Profile Navigation"),
					"cache"	=> BLOCK_NO_CACHE, // i'll handle caching on my own, kthx.
				)
			);
		case "view":
			switch ($delta)
			{
				case "navigation_profile_display":
					global $user;
					
					$content = $user->uid ? profile_ext_display_block($user) : "";
					
					return array(
						"subject"	=> "",
						"content"	=> $content,
					);
			}
	}
}

function profile_ext_theme(&$existing, $type, $theme, $path)
{
	return array(
		"profile_ext_external_accounts"	=> array(
			"arguments"	=> array(
				"partner_data"	=> array(),
				"user_accounts"	=> false,
				"admin_external_account"		=> false,
			),
			"template"	=> "templates/profile/external-accounts",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_view_fields"	=> array(
			"arguments"	=> array("target_user" => false, "fields_category" => array()),
			"template"	=> "templates/profile/view-fields",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_profile_info"	=> array(
			"arguments"	=> array("uid"	=> 0, "access"	=> PRIVACY_PUBLIC),
			"template"	=> "templates/profile/profile-info",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_edit_link"		=> array(
			"arguments" => array("url"	=> ""),
			"template"	=> "templates/profile/edit-link",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_displayblock"		=> array(
			"arguments"	=> array("display_user" => false, "profile_picture" => false, "sub_items" => array()),
			"template"	=> "templates/profile/display-block",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_displayblock_item"	=> array(
			"arguments"	=> array("item_data" => array()),
			"template"	=> "templates/profile/display-block-item",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_header"			=> array(
			"arguments"	=> array("profile_ext_user" => false),
			"template"	=> "templates/profile/header",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_header_menu"		=> array(
			"arguments"	=> array("profile_ext_user" => false),
			"template"	=> "templates/profile/header-menu",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
		"profile_ext_dashboard"			=> array(
			"arguments"	=> array("profile_tabs" => array(), "profile_actions" => array()),
			"template"	=> "templates/profile/dashboard",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
	);
}

function profile_ext_display_block($u)
{	
	$cache_key = "profile_display_block:{$u->uid}";
	$cache_time = 60*5; // 5 minutes
	
	if (false && $cache = cache_get($cache_key, "cache"))
	{
		$items = $cache->data;
	}
	else
	{
		module_load_include("inc", "profile_ext");
		$items = "";
		
		if (module_exists("privatemsg"))
		{
			$theme_args = array(
				"image"	=> "/themes/vibio/images/icons/mail.png",
				"title"	=> t("Messages"),
				"count"	=> privatemsg_unread_count($u),
				"href"	=> url("messages"),
			);
			$items .= theme("profile_ext_displayblock_item", $theme_args);
		}
		
		$theme_args = array(
			"image" => "/themes/vibio/images/icons/messages.png",
			"title"	=> t("Notifications"),
			"count"	=> profile_ext_get_dashboard_notifications($u->uid, $tabs),
			"href"	=> url("my-dashboard/notifications"),
		);
		$items .= theme("profile_ext_displayblock_item", $theme_args);
		
		cache_set($cache_key, $items, "cache", time() + $cache_time);
	}
	
	$pic = $u->picture ? file_create_url($u->picture) : "/themes/vibio/images/icons/default_user_large.png";
	return theme("profile_ext_displayblock", $u, $pic, $items);
}

function profile_ext_get_progress($uid)
{
	$total = 0;
	$completed = 0;
	
	foreach (module_invoke_all("profile_ext_progress", $uid) as $category => $data)
	{
		$total += $data['possible_points'];
		$completed += $data['points'];
	}
	
	return number_format(100*($completed/$total));
}

function profile_ext_profile_ext_progress($uid)
{
	$sql = "SELECT *
			FROM {profile_fields}
			ORDER BY `category`";
	$res = db_query($sql);
	
	$data = array(
		"possible_points"	=> 0,
		"points"			=> 0,
		"complete"			=> true,
	);
	
	while ($row = db_fetch_array($res))
	{
		$fields[$row['category']][] = $row['fid'];
		++$data['possible_points'];
	}
	
	foreach ($fields as $category => $fids)
	{
		$sql_fids = implode(",", $fids);
		$sql = "SELECT COUNT(*)
				FROM {profile_values}
				WHERE `uid`=%d
					AND `value` != ''
					AND `fid` IN ($sql_fids)";
		$category_complete = db_result(db_query($sql, $uid));
		$data['points'] += $category_complete;
		
		if ($category_complete < count($fids)) //greatest value should only be equal to
		{
			$params = array(
				"!category"	=> $category,
				"!missing"	=> count($fids) - $category_complete,
			);
			$text = t("Complete !category profile info (!missing items missing)", $params);
			
			$data['complete'] = false;
			$data['completion_steps'][$text] = "/user/{$uid}/edit/{$category}";
		}
	}
	
	return array(t("Profile")	=> $data);
}

function profile_ext_preprocess_user_profile(&$vars)
{
	global $user;
	module_load_include("inc", "profile_ext");
	
	$args = explode("/", $_GET['q']);
	$uid = $args[1];
	$target_user = user_load($uid);
	
	$vars['profile']['profile_progress'] = profile_ext_get_progress($uid);
	$vars['profile']['user'] = $target_user;
	$vars['profile']['demographics'] = theme("profile_ext_view_fields", $target_user, "demographics");
	$vars['profile']['public_info'] = profile_ext_public_info($uid);
}

function profile_ext_preprocess_page(&$vars)
{
	global $user;
	
	drupal_add_css("themes/vibio/css/profile.css");
	$vars['profile_ext_header'] = theme("profile_ext_header", $user);
}

function profile_ext_preprocess_profile_ext_profile_info(&$vars)
{
	global $user;
	
	if ($vars['access'] >= privacy_get($vars['uid'], "profile", "profile_about_me"))
	{
		module_load_include("inc", "profile_ext", "profile_ext.pages");
		
		$u = user_load($vars['uid']);
		$vars['profile_about_me'] = theme("profile_ext_view_fields", $u, "about me");
		$vars['profile_external_accounts'] = profile_ext_manage_external_accounts($vars['uid']);
	}
	
	if ($vars['access'] >= privacy_get($vars['uid'], "profile", "profile_demographics"))
	{
		module_load_include("inc", "profile_ext", "profile_ext.pages");
		
		$u = user_load($vars['uid']);
		$vars['profile_demographics'] = theme("profile_ext_view_fields", $u, "demographics");
	}
	
	if ($vars['uid'] == $user->uid || user_access("administer users"))
	{
		$vars['about_edit_link'] = theme("profile_ext_edit_link", "user/{$vars['uid']}/edit/About Me");
		$vars['demographics_edit_link'] = theme("profile_ext_edit_link", "user/{$vars['uid']}/edit/Demographics");
	}
}

function profile_ext_access_dashboard()
{
	global $user;
	return $user->uid > 0;
}

function profile_ext_access_profile($user, $category)
{
	$privacy_setting = privacy_get($user->uid, "profile", "profile_{$category}");
	return user_access("access user profiles") && privacy_get_access_level($user->uid) >= $privacy_setting;
}

function profile_ext_access($perm)
{
	return user_access("administer users") || user_access($perm);
}

function _profile_ext_get_title($user, $category)
{
	return t("!user - !category", array("!user" => $user->name, "!category" => $category));
}

function profile_ext_form_user_profile_form_alter(&$form, &$state)
{
	$category = _profile_ext_format_string($form['_category']['#value']);
	
	$profile_categories = array(
		"about_me",
		//"demographics",
	);
	
	if (in_array($category, $profile_categories))
	{
		$form_category = $form['_category']['#value'];
		$form[$form_category]['privacy_settings_fieldset'] = _privacy_fieldset($form['_account']['#value']->uid, "profile", "profile_{$category}");
		$form['#submit'][] = "_privacy_form_submit";
	}
}

function profile_ext_profile_ext_public_info($uid)
{
	$u = user_load($uid);
	$join_date_format = date("Y") == date("Y", $u->created) ? "M j" : "M j, Y";
	$join_date = date($join_date_format, $u->created);
	$join_date_interval = format_interval(time() - $u->created, 1);
	
	return array(array(
		"weight"=> 10,
		"title"	=> t("Member Since"),
		"data"	=> "$join_date ($join_date_interval)"
	));
}

function _profile_ext_format_string($string, $for_url=false)
{
	$replacement = $for_url ? "-" : "_";
	return str_replace(array(" ", "-", "+", "_"), $replacement, strtolower($string));
}
?>
