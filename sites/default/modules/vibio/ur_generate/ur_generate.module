<?php
function ur_generate_menu()
{
	return array(
		"admin/generate/user-relationships"	=> array(
			"title"				=> "User Relationships",
			"page callback"		=> "drupal_get_form",
			"page arguments"	=> array("ur_generate_admin"),
			"access arguments"	=> array("ur_generate admin"),
			"type"				=> MENU_NORMAL_ITEM,
		),
	);
}

function ur_generate_admin()
{
	return array(
		"#prefix"			=> t("Make sure to turn off UR emails on the !settings page!", array("!settings" => l("settings", "admin/user/relationships/settings"))),
		"generate_amount"	=> array(
			"#title"		=> t("Amount of relationships"),
			"#type"			=> "textfield",
			"#size"			=> 6,
			"#required"		=> true,
			"#default_value"=> 200,
		),
		"target_uid"		=> array(
			"#title"		=> t("Target User"),
			"#description"	=> t("The user whose network will grow."),
			"#type"			=> "textfield",
			"#size"			=> 6,
			"#required"		=> true,
			"#default_value"=> 1,
		),
		"refresh_interval"	=> array(
			"#title"		=> t("Network Refresh Interval"),
			"#description"	=> t("The amount of relationships before the network is refreshed."),
			"#type"			=> "textfield",
			"#size"			=> 6,
			"#required"		=> true,
			"#default_value"=> 5,
		),
		"submit"			=> array(
			"#type"	=> "submit",
			"#value"=> t("generate"),
		),
	);
}

function ur_generate_admin_validate($form, &$state)
{
	if (!is_numeric($state['values']['generate_amount']))
	{
		form_set_error("generate_amount", t("Amount of relationships must be numeric"));
	}
}

function ur_generate_admin_submit($form, &$state)
{
	set_time_limit(0);
	
	$x = count(network_get(1));
	
	$amount = $state['values']['generate_amount'];
	$refresh = $state['values']['refresh_interval'];
	$target = $state['values']['target_uid'];
	$network = false;
	$rtid = 1;
	$i = 0;
	
	while ($i < $amount)
	{
		$network = implode(",", array_keys(network_get($target, false, 2)));
		$limit = min($refresh, $amount - $i);
		
		for ($j = 0; $j < $limit; ++$j)
		{
			$sql = "SELECT `uid`, `name`
					FROM {users}
					WHERE `uid` IN ($network)
					ORDER BY RAND()
					LIMIT 1";
			$user1 = db_fetch_object(db_query($sql));
			
			$sql = "SELECT `uid`, `name`
					FROM {users}
					WHERE `uid` != %d
						AND `uid` NOT IN (
							SELECT `requestee_id`
							FROM {user_relationships}
							WHERE `requester_id`=%d
						)
					ORDER BY RAND()
					LIMIT 1";
			if (!($user2 = db_fetch_object(db_query($sql, $user1->uid, $user1->uid))))
			{
				continue;
			}
			
			$rel = new stdClass;
			$rel->requester_id = $user1->uid;
			$rel->requester = $user1;
			$rel->requestee_id = $user2->uid;
			$rel->requestee = $user2;
			$rel->approved = 1;
			$rel->rtid = 1;
			$rel->name = "Connection";
			
			user_relationships_save_relationship($rel, "approve");
		}
		
		$i += $refresh;
	}
	
	drupal_set_message("done");
}
?>