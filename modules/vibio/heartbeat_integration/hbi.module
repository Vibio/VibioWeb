<?php
function hbi_user_relationships($op, &$relationship)
{
	switch ($op)
	{
		case "approve":
			_hbi_set_relationship($op, $relationship);
			break;
		case "remove":
			break;
	}
}

function hbi_privacy_update_user($form, $user, $category)
{
	if ($category == "account")
	{
		if (empty($form['heartbeat_activity_settings']))
		{
			return;
		}
		
		foreach ($form['heartbeat_activity_settings'] as $type_id => $access)
		{
			privacy_set($user->uid, "heartbeat_messages", $type_id, $access['access']);
		}
	}
}

function hbi_offer2buy_make_offer($node, $offerer, $owner, $offer)
{
	$variables = array(
		"@offerer"	=> l("user/{$offerer->uid}", $offerer->name),
		"@item"		=> l($node->title, "node/{$node->nid}"),
	);
	
	heartbeat_api_log("make_offer_on_vibio_item", $offerer->uid, $owner->uid, $node->nid, 0, $variables);
}

function _hbi_set_relationship($op, &$relationship)
{
	$message_id = $op == "approve" ? "heartbeat_become_friends" : "heartbeat_cancel_friendship";
	$variables = array(
		"@user1" 		=> l($relationship->requestee->name, "user/".$relationship->requestee->uid),
		"@relation_type"=> $relationship->name,
		"@user2"		=> l($relationship->requester->name, "user/".$relationship->requester->uid),
		"duplicate"		=> 1,
	);
	
	heartbeat_api_log($message_id, $relationship->requestee->uid, $relationship->requester->uid, 0, 0, $variables);
	
	$var_reverse = $variables;
	$var_reverse['@user1'] = $variables['@user2'];
	$var_reverse['@user2'] = $variables['@user1'];
	
	heartbeat_api_log($message_id, $relationship->requester->uid, $relationship->requestee->uid, 0, 0, $var_reverse);
}
?>