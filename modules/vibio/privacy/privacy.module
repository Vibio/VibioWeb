<?php
define("PRIVACY_ONLYME", 4);
define("PRIVACY_CONNECTION", 3);
define("PRIVACY_AUTHENTICATED", 2);
define("PRIVACY_PUBLIC", 1);

function privacy_perm()
{
	return array(
		"privacy admin",
	);
}

function privacy_menu()
{
	return array(
		"admin/settings/privacy/mass-update"=> array(
			"title"				=> "Set Privacy Settings",
			"description"		=> "Set the privacy settings for all users",
			"page callback"		=> "drupal_get_form",
			"page arguments"	=> array("privacy_mass_set"),
			"access arguments"	=> array("privacy admin"),
			"file"				=> "privacy.pages.inc",
			"type"				=> MENU_NORMAL_ITEM,
		),
		"privacy/restricted/%user/%"		=> array(
			"title"				=> "Uh Oh",
			"page callback"		=> "privacy_access_restricted_page",
			"page arguments"	=> array(2, 3),
			"access arguments"	=> array("access content"),
			"file"				=> "privacy.pages.inc",
			"type"				=> MENU_CALLBACK,
		),
	);
}

function privacy_theme()
{
	return array(
		"privacy_restricted_page"	=> array(
			"arguments"	=> array("header_message" => "", "available_actions" => ""),
			"template"	=> "templates/privacy/restricted",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
	);
}

/**
 * For a given context, determines the access level of the current user.
 *
 * Examples: If $to_uid =
 * ...me, access level = 4
 * ...a connected friend, access level = 3
 * ...another vibio user, access level = 2
 *
 * If my access level >= privacy setting, then I can view the content. In other
 * words, the higher privacy_get_access_level returns, the more I can access.
 *
 * @global <type> $user
 * @staticvar array $privacy_access_levels
 * @param <type> $to_uid
 * @param <type> $from_uid
 * @return array An array of access levels, stored as a static variable; is
 * this crude caching?
 */
function privacy_get_access_level($to_uid, $from_uid=null)
{
	static $privacy_access_levels = array();

	if ($from_uid == null)
	{
		global $user;
		$from_uid = $user->uid;
	}

  //The user is anonymous
	if (!$from_uid)
	{
		return PRIVACY_PUBLIC;
	}
	elseif ($from_uid == $to_uid)
	{
		return PRIVACY_ONLYME;
	}
	
	if (!$privacy_access_levels[$from_uid][$to_uid])
	{
		$network = network_get($from_uid, false, 1); //Finding if this is a connection?
		$privacy_access_levels[$from_uid][$to_uid] = array_key_exists($to_uid, $network) ? PRIVACY_CONNECTION : PRIVACY_AUTHENTICATED;
	}
	
	return $privacy_access_levels[$from_uid][$to_uid];
}

function _privacy_options()
{
	return array(
		PRIVACY_PUBLIC			=> t("Anyone"),
		PRIVACY_AUTHENTICATED	=> t("Only users with Vibio accounts"),
		PRIVACY_CONNECTION		=> t("Only my Friends"),
		PRIVACY_ONLYME			=> t("Private to me"),
	);
}

/**
 * Write the record to the node access table according to the privacy
 * settings on this particular node.
 * 
 * @param <type> $node
 
function privacy__node_access_records($node){
  //Depending on the type of node...
  switch($node->type)
    case 'vibio_item'
    case 'collection'
      //Load the appropriate record from the privacy table
      
}
 * 
 */
?>
