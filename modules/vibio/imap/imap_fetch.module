<?php
define("IMAP_STATUS_PENDING", 1);
define("IMAP_STATUS_DELETED", 2);
define("IMAP_STATUS_SAVED", 3);
define("IMAP_STATUS_CREATED", 4);

function imap_fetch_perm()
{
	return array(
		"imap admin",
		"imap user",
	);
}

function imap_fetch_menu()
{
	return array(
		"admin/settings/imap-image-fetch"	=> array(
			"title"				=> "IMAP Image Fetch",
			"page callback"		=> "drupal_get_form",
			"page arguments"	=> array("imap_fetch_admin"),
			"access arguments"	=> array("imap admin"),
			"file"				=> "imap_fetch.forms.inc",
			"type"				=> MENU_NORMAL_ITEM,
		),
		"imap/fetch"	=> array(
			"page callback"		=> "imap_fetch_fetch_images",
			"access callback"	=> "imap_fetch_access",
			"type"				=> MENU_CALLBACK,
		),
		"imap/ajax"		=> array(
			"page callback"		=> "imap_fetch_ajax_service",
			"access arguments"	=> array("imap user"),
			"file"				=> "imap_fetch.pages.inc",
			"type"				=> MENU_CALLBACK,
		),
	);
}

function imap_fetch_theme()
{
	return array(
		"imap_dashboard_notification"	=> array(
			"arguments"	=> array("imap_image" => array()),
			"template"	=> "templates/imap/dashboard-notification",
			"path"		=> drupal_get_path("theme", "vibio"),
		),
	);
}

function imap_fetch_nodeapi(&$node, $op, $a3=null, $a4=null)
{
	if ($node->type != "product")
	{
		return;
	}
	
	$x = 1;
	switch ($op)
	{
		case "insert":
			if ($node->imap_id)
			{
				module_load_include("inc", "imap_fetch");
				imap_fetch_attach_image($node->imap_id, $node->nid, "field_main_image", "last", IMAP_STATUS_CREATED);
				unset($node->imap_id);
			}
			
			break;
	}
}

function imap_fetch_form_alter(&$form, &$state, $id)
{
	if ($id != "product_node_form")
	{
		return;
	}
	
	global $user;
	
	module_load_include("inc", "imap_fetch");
	if (!($imap_id = $_GET['image_id']) || !($image = imap_fetch_get_image($imap_id)) || $image->uid != $user->uid || !file_exists($image->filepath))
	{
		return;
	}
	
	$form['imap_id'] = array(
		"#type"	=> "value",
		"#value"=> $imap_id,
	);
	
	$message = t("This product will be created with the following image:");
	$image_url = file_create_url($image->filepath);
	
	unset($form['field_main_image']);
	
	$form['field_images']['#prefix'] = "
		$message<br />
		<img src='{$image_url}' style='max-height: 100px;' />
	".$form['field_images']['#prefix'];
}

function imap_fetch_forms($id, $args)
{
	module_load_include("inc", "imap_fetch", "imap_fetch.forms");
	
	if (strpos($id, "imap_fetch_delete_form_") !== false)
	{
		$forms[$id] = array(
			"callback"	=> "imap_fetch_delete_form",
		);
		
		return $forms;
	}
	elseif (strpos($id, "imap_fetch_attach_form_") !== false)
	{
		$forms[$id] = array(
			"callback"	=> "imap_fetch_attach_form",
		);
		
		return $forms;
	}
}

function imap_fetch_profile_ext_dashboard_notifications($uid)
{
	module_load_include("inc", "imap_fetch");
	
	$count = 0;
	$output = "";
	
	foreach (imap_fetch_user_pending_images($uid) as $image)
	{
		++$count;
		$output .= theme("imap_dashboard_notification", $image);
	}
	
	return array(
		"imap"	=> array(
			"count"		=> $count,
			"display"	=> $output,
		),
	);
}

function imap_fetch_preprocess_imap_dashboard_notification(&$vars)
{
	drupal_add_js("themes/vibio/js/imap.js");
	drupal_add_css("themes/vibio/css/imap.css");
	module_load_include("inc", "imap_fetch", "imap_fetch.forms");
	
	$image = $vars['imap_image'];
	$vars['image_create_product'] = module_exists("product") ?
		l(t("Create new product"), "product/add", array("query" => "image_id={$image->imap_id}")) : "";
	$vars['image_delete_form'] = drupal_get_form("imap_fetch_delete_form_{$image->imap_id}", $image);
	$vars['image_attach_form'] = drupal_get_form("imap_fetch_attach_form_{$image->imap_id}", $image);
}

function imap_fetch_access()
{
	return true;
}

function imap_fetch_fetch_images()
{
	$start = microtime(true);
	module_load_include("inc", "imap_fetch");
	$count = imap_fetch_get_attachments();
	$time_taken = microtime(true) - $start;
	
	exit();
//	exit("Done. Took $time_taken seconds for $count images");
}
?>
