<?php

/**
 * Menu link to an invite page
 */
function vibio_invite_menu(){
  //Admin URL. Frontend defined in vibio_invite_menu_alter() below.
  $items['admin/vibio_invite'] = array(
    'title' => 'Vibio Invite Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vibio_invite_admin'),
    'description' => 'Settings for Vibio cross-platform invitations',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Alter the invite.module url to work with the vibio_invite system.
 * 
 * See invite.module. Note that invite has been hacked, so we're relying
 * on hacked code which may change in the future.
 * @TODO: change invite.module to standard contrib
 * 
 * @param <type> $items 
 */
function vibio_invite_menu_alter(&$items){
  $items['contacts/invite/email'] = $items['contacts/invite'];
  $items['contacts/invite'] = array(
    'title' => 'Vibio Invite',
    'page callback' => 'vibio_invite_display_page',
    'description' => 'Invite friends to Vibio',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

}

function vibio_invite_admin($form_state){
  $form['twitter_message'] = array(
      '#type' => 'textarea',
      '#title' => 'Twitter Message',
      '#description' => 'This is the message that will be posted to twitter along with
        an invitation URL to Vibio. Remember that the invitation URL will be about
        25 characters, so keep your message short.',
      '#default_value' => "Join me on @vibio and checkout my collections!",
  );

  $form['invite_link'] = array(
      '#type' => 'textfield',
      '#title' => 'Invitation Link',
      '#description' => 'The page that invited users will be sent to, relative to webroot',
      '#default_value' => 'user/register',
  );

  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Save'),
  );

  return $form;

  //@todo add an ajax callback to have a dynamic facebook message for the request.
}

/**
 * Sets the admin variables.
 * 
 * @param <type> $form
 * @param <type> $form_state
 */
function vibio_invite_admin_submit($form, &$form_state){
  //Adding a space because the URL will be appended the end
  variable_set('vibio_invite_twitter_message', $form_state['values']['twitter_message'] . ' ');
  $url = url($form_state['values']['invite_link']);
  variable_set('vibio_invite_link', $url);
}

/**
 * Block definition, implements hook_block()
 *
 * @param <type> $op
 * @param <type> $delta
 * @param <type> $edit
 * @return string
 */
function vibio_invite_block($op = 'list', $delta = 'vibio_invite', $edit = array()) {
  if ($op == 'list') {
    $block['vibio_invite']['info'] = t('Vibio Invites');
    $block['vibio_invite']['visibility'] = 0;
    $block['vibio_invite']['pages'] = 'vibio_invite';
    return $block;
  }
  elseif ($op == 'view' && $delta == 'vibio_invite') {
    $block['subject'] = t('Invite Friends');
    $block['content'] = theme('vibio_invite_display');
    return $block;
  }
}

/**
 * Implementes hook_theme()
 *
 * @return Array
 */
function vibio_invite_theme(){
  return array(
      'vibio_invite_display' => array(
          'template' => 'templates/vibio-invite-block-content',
          'path' => drupal_get_path('module', 'vibio_invite'),
      ),
      'vibio_invite_providers' => array(
          'template' => 'templates/vibio-invite-providers',
          'path' => drupal_get_path('module', 'vibio_invite'),
      ),
  );  
}

/**
 * Generates the link variables for the invite block template
 *
 * @return string
 */
function vibio_invite_preprocess_vibio_invite_display(&$vars){
  global $base_url;
  $app_id = variable_get('fboauth_id', '');
  $url = variable_get('vibio_invite_link');
  
  //URL to send an invitation message via Twitter
  if(module_exists('shorten')){
    $twitter_url = shorten_url($url, 'TinyURL');
  }else{
    $twitter_url = $url;
  }
  $twitter_message = variable_get('vibio_invite_twitter_message');

  $vars['twitter_url'] = 'http://twitter.com/home?status=' . $twitter_message . $twitter_url; //array('attributes' => array('target' => '_blank')));

  //Facebook URL for request
  //@TODO: use request dialog instead of send
  $vars['fb_url'] = url("https://www.facebook.com/dialog/send", array('query' => array('app_id' => $app_id, 'name' => "Join Vibio to share your collections and see your friends's things", 'link' => $base_url, 'redirect_uri' => $base_url . "/invite")));

  //URL to the current email invite page
  $vars['email_url'] = url('contacts/invite/email');
}

/**
 * Prepopulates vibio-invite-providers.tpl.php with the appropriate urls to initiate
 * the contact importation from the selected provider.
 * 
 * @param <type> $vars
 */
function vibio_invite_preprocess_vibio_invite_providers(&$vars){
    $enabled_providers = _contact_importer_providers_enabled();
    //Creates variables for each provider url
    foreach ($enabled_providers as $provider_name => $provider) {
      $favicon = !empty($provider['favicon']) ? $provider['favicon'] : '';
      $vars[$provider_name] = url('contact_importer/' . $provider_name);
    }
}

function vibio_invite_display_page(){
  //In the future we may want to use the FB JS SDK here, but currently having problems-alec
  //vibio_fboauth_add_js();
  //Add the JS for the FB request dialog and possibly for twitter
  //drupal_add_js(drupal_get_path('module', 'vibio_invite') . '/js/vibio_invite.js');
  return theme('vibio_invite_display');
}

/**
 * Adds OG meta data on the register page so if we send invites with the register page
 * as the destination FB will display the correct info.
 * 
 * @param <type> $form
 * @param <type> $form_state
 */
function vibio_invite_form_user_register_alter(&$form, &$form_state){
  global $base_url;
  $site_image = $base_url . '/'. drupal_get_path('theme', 'vibio') . '/vibio-logo.png';
  $og_image = '<meta property="og:image" content="' . $site_image . '"/>';
  drupal_set_html_head($og_image);
}

/**
 * Form alter to add contact_import buttons to the invite module's
 * front-facing UI form.
 *
 * Implements hook_form_FORM_ID_alter()
 *
 * @param <type> $form
 * @param <type> $form_state
 */
function vibio_invite_form_invite_form_alter(&$form, &$form_state){
  //Add a contact_importer form
  $form['contact_importer'] = array(
      '#value' => theme('vibio_invite_providers'),
  );
  //Bind contact_importer to the invite "To" field
  if (module_exists('contact_importer')) {
    //Custom implementation of contact_importer_bind_to_form()
    vibio_invite_importer_bind_form($form, 'email');
  }
}

/**
 * Skip the service selection screen for contact_importer and go straight to
 * providing credentials for the service indicated in the url contact_importer/%service
 *
 * Implements hook_form_FORM_ID_alter()
 * 
 * @param <type> $form
 * @param <type> $form_state
 */
function vibio_invite_form_contact_importer_form_alter(&$form, &$form_state){
  if($form_state['storage']['step'] == 'select_provider' && arg(1)) {
    //@SEE: http://drupal.org/node/906450
    // Remove any emails stored from a previous attempt.
    contact_importer_set_contacts(NULL);
    $form_state['storage']['providers'] = _contact_importer_providers();
    if(array_key_exists(arg(1), $form_state['storage']['providers'])) {
      $form_state['storage']['provider'] = $form_state['storage']['providers'][arg(1)];
      $form_state['storage']['provider']['provider_name'] = arg(1);
      $form_state['storage']['step'] = 'credentials';
    }
    //Had trouble with this; wasn't passing $form_state correctly?
    //$form = drupal_get_form('contact_importer_form', TRUE);
    //Make sure you put the class contact-importer-link on the links...
    $form = drupal_rebuild_form('contact_importer_form', $form_state);
  }
}


/**
 * Bind Contact Importer to the given field on the given form.
 *
 * I've customized this for vibio to not add description text below the
 * text field. Instead, we're adding links in vibio_invite_form_invite_form_alter().
 *
 * @param array &$form
 *  FAPI form array.
 * @param string $field_name
 *  The field to bind to.
 * @return boolean
 *  TRUE on successful binding, else FALSE.
 */
function vibio_invite_importer_bind_form(&$form, $field_name) {

  // We can only bind to one form per page.
  static $has_run = FALSE;

  if (!$has_run && user_access('access contact importer') &&
    $_GET['q'] != 'contact_importer' && $_GET['q'] != 'contact_importer_js'
  ) {

    // Get a reference to the field if it exists.
    $field_reference =& _contact_importer_find_field($form, $field_name);
    if (empty($field_reference)) {
      return FALSE;
    }

    // When a modal pop-up is used, this class tells Contact Importer to put the email addresses here.
    $class = 'contact-importer-destination';
    if (isset($field_reference['#attributes']['class'])) {
      $field_reference['#attributes']['class'] .= ' '. $class;
    }
    else {
      $field_reference['#attributes']['class'] = $class;
    }

    // If the user has already imported contacts, but they don't have Javascript, they will be
    // redirected back here.
    $field_reference['#default_value'] = contact_importer_get_contacts();

    // Initiate Contact Importer.
    // It is important that this happens after saved contacts are retrieved above.
    contact_importer_add_js();

    // The link to import the contacts is added in
    // vibio_invite_form_invite_form_alter().

    return $has_run = TRUE;
  }
  return FALSE;
}



?>
